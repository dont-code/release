name: Deploy All Live

on:
  workflow_dispatch:
    inputs:
      next:
        description: Is it a dev / next release ?
        required: true
        type: boolean
      deploy:
        description: Deploy to public website?
        required: true
        type: boolean

jobs:
  build:
    env:
      branch: ${{ inputs.next == true && 'Development' || 'main' }}
      stage: ${{ inputs.next == true && 'next' || 'latest' }}
      version: ${{ inputs.next == true && 'patch' || 'minor' }}
      build: ${{ inputs.next == true && 'next' || 'production' }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, chrome, firefox]

    steps:
    - uses: actions/checkout@v3
      with:
        repository: dont-code/plugins
        path: plugins
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - name: Setup build environment
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    - run: |
        npm install -g nx
    - name: Building Plugins ${{env.stage}}
      run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} --no-optional
        nx run basic:build:production
        nx run basic:test
        nx run fields:build:production
        nx run fields:test
        nx run screen:build:production
        nx run screen:test
      working-directory: 'plugins'
    - run: |
        nx run plugin-tester-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'plugins'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: plugins/dist/cypress/apps/plugin-tester-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: plugins/dist/cypress/apps/plugin-tester-e2e/videos
    - name: Prepare Plugins deployment
      run: nx run plugin-tester:build:production --output-path="dist/apps/plugin-tester/${{env.stage}}" --base-href "https://dont-code.net/plugins/${{env.stage}}/"
      working-directory: 'plugins'
    - name: Building Plugin Seed ${{env.branch}}
      uses: actions/checkout@v3
      with:
        repository: dont-code/plugin-seed
        path: plugin-seed
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}}
        nx run seed:build:production
        nx run seed:test
        nx run seed-tester:test
      working-directory: 'plugin-seed'
    - run: |
        nx run seed-tester-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'plugin-seed'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: plugin-seed/dist/cypress/apps/seed-tester-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: plugin-seed/dist/cypress/apps/seed-tester-e2e/videos
    - name: Prepare Plugin Seed Deployment
      run:  nx run seed-tester:build:production --output-path="dist/apps/seed-tester/${{env.stage}}" --base-href "https://dont-code.net/plugin-seed/${{env.stage}}/"
      working-directory: 'plugin-seed'

    - name: Building Plugin Rest ${{env.branch}}
      uses: actions/checkout@v3
      with:
        repository: dont-code/plugin-rest
        path: plugin-rest
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}}
        nx run rest:build:production
        nx run rest:test
        nx run rest-tester:test
      working-directory: 'plugin-rest'
    - run: |
        nx run rest-tester-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'plugin-rest'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: plugin-rest/dist/cypress/apps/rest-tester-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: plugin-rest/dist/cypress/apps/rest-tester-e2e/videos
    - name: Prepare Plugin Rest deployment
      run: nx run rest-tester:build:production --output-path="dist/apps/rest-tester/${{env.stage}}" --base-href "https://dont-code.net/plugin-rest/${{env.stage}}/"
      working-directory: 'plugin-rest'
    - name: Building Plugin Report ${{env.branch}}
      uses: actions/checkout@v3
      with:
        repository: dont-code/plugin-report
        path: plugin-report
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}} @dontcode/plugin-basic@${{env.stage}} @dontcode/plugin-fields@${{env.stage}}
        nx run report:build:production
        nx run report:test
        nx run report-tester:test
      working-directory: 'plugin-report'
    - run: |
        nx run report-tester-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'plugin-report'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: plugin-report/dist/cypress/apps/report-tester-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: plugin-report/dist/cypress/apps/report-tester-e2e/videos
    - name: Prepare Plugin Report Deployment
      run:  nx run report-tester:build:production --output-path="dist/apps/report-tester/${{env.stage}}" --base-href "https://dont-code.net/plugin-report/${{env.stage}}/"
      working-directory: 'plugin-report'

    - name: Building Plugin Commerce ${{env.branch}}
      uses: actions/checkout@v3
      with:
        repository: dont-code/plugin-commerce
        path: plugin-commerce
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}} @dontcode/plugin-basic@${{env.stage}} @dontcode/plugin-fields@${{env.stage}}
        nx run commerce:build:production
        nx run commerce:test
        nx run commerce-tester:test
      working-directory: 'plugin-commerce'
    - run: |
        nx run commerce-tester-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'plugin-commerce'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: plugin-commerce/dist/cypress/apps/commerce-tester-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: plugin-commerce/dist/cypress/apps/commerce-tester-e2e/videos
    - name: Prepare Plugin Commerce deployment
      run:  nx run commerce-tester:build:production --output-path="dist/apps/commerce-tester/${{env.stage}}" --base-href "https://dont-code.net/plugin-commerce/${{env.stage}}/"
      working-directory: 'plugin-commerce'

    - name: Building IDE Builder ${{env.branch}}
      uses: actions/checkout@v3
      with:
        repository: dont-code/ide-ui
        path: ide-ui
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}} @dontcode/plugin-basic@${{env.stage}} @dontcode/plugin-fields@${{env.stage}} @dontcode/plugin-screen@${{env.stage}} @dontcode/plugin-rest@${{env.stage}} @dontcode/plugin-report@${{env.stage}} @dontcode/plugin-commerce@${{env.stage}}
        nx run ide-ui:build:production
        nx run ide-ui:test
      working-directory: 'ide-ui'
    - run: |
        nx run ide-ui-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'ide-ui'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: ide-ui/dist/cypress/apps/ide-ui-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: ide-ui/dist/cypress/apps/ide-ui-e2e/videos
    - name: Prepare IDE Builder deployment ${{env.branch}}
      run: nx run ide-ui:build:${{env.build}} --output-path="dist/apps/ide-ui/${{env.stage}}" --base-href "https://dont-code.net/ide-ui/${{env.stage}}/"
      working-directory: 'ide-ui'

    - name: Building Previewer
      uses: actions/checkout@v3
      with:
        repository: dont-code/preview-ui
        path: preview-ui
        fetch-depth: 0
        ref: ${{env.branch}}
        token: ${{secrets.DONTCODE_ACTIONS_TOKEN}}
    - run: |
        npm ci
        npm install @dontcode/core@${{env.stage}} @dontcode/plugin-common@${{env.stage}} @dontcode/sandbox@${{env.stage}}
        nx run preview-ui:build:production
      working-directory: 'preview-ui'
    - run: |
        nx run preview-ui-e2e:e2e --browser ${{matrix.browser}}
      working-directory: 'preview-ui'
    - uses: actions/upload-artifact@v3
      # Test run screenshots only on failure
      if: failure()
      with:
        name: cypress-screenshots
        path: preview-ui/dist/cypress/apps/preview-ui-e2e/screenshots
        # Test run video was always captured, so this action uses "always()" condition
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: preview-ui/dist/cypress/apps/preview-ui-e2e/videos
    - name: Prepare Previewer deployment
      run: nx run preview-ui:build:${{env.build}} --output-path="dist/apps/preview-ui/${{env.stage}}" --base-href "https://dont-code.net/preview-ui/${{env.stage}}/"
      working-directory: 'preview-ui'

    - name: Deploy everything to ${{env.stage}}
      if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/plugins
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: plugins/dist/apps/plugin-tester
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/plugin-seed
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: plugin-seed/dist/apps/seed-tester
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/plugin-rest
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: plugin-rest/dist/apps/rest-tester
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/plugin-report
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: plugin-report/dist/apps/report-tester
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/plugin-commerce
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: plugin-commerce/dist/apps/commerce-tester
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') && ( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/ide-ui
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: ide-ui/dist/apps/ide-ui
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
    - if: ${{ success() && (matrix.browser == 'chromium') &&( inputs.deploy == true ) }}
      uses: gcollin/ghaction-github-pages@main
      with:
        repo: dont-code/preview-ui
        target_branch: gh-pages # The branch the action should deploy to.
        build_dir: preview-ui/dist/apps/preview-ui
        keep_history: false
        multiple_sites: true
        jekyll: false
      env:
        GITHUB_TOKEN: ${{secrets.DONTCODE_ACTIONS_TOKEN }}
